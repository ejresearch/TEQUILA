{"ast":null,"code":"// API Client for STEEL Backend\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nconst API_KEY = process.env.REACT_APP_API_KEY || '';\nclass APIError extends Error {\n  constructor(status, message, detail) {\n    super(message);\n    this.status = status;\n    this.detail = detail;\n    this.name = 'APIError';\n  }\n}\nasync function fetchAPI(endpoint, options = {}) {\n  const headers = {\n    'Content-Type': 'application/json',\n    ...(API_KEY ? {\n      'X-API-Key': API_KEY\n    } : {}),\n    ...options.headers\n  };\n  const response = await fetch(`${API_BASE_URL}${endpoint}`, {\n    ...options,\n    headers\n  });\n  if (!response.ok) {\n    const errorData = await response.json().catch(() => ({}));\n    throw new APIError(response.status, errorData.detail || response.statusText, errorData);\n  }\n  return response.json();\n}\nexport const api = {\n  // Usage tracking\n  getUsage: () => fetchAPI('/api/v1/usage'),\n  resetUsage: () => fetchAPI('/api/v1/usage/reset', {\n    method: 'POST'\n  }),\n  // Week operations\n  scaffoldWeek: week => fetchAPI(`/api/v1/weeks/${week}/scaffold`, {\n    method: 'POST'\n  }),\n  validateWeek: week => fetchAPI(`/api/v1/weeks/${week}/validate`, {\n    method: 'POST'\n  }),\n  exportWeek: week => fetchAPI(`/api/v1/weeks/${week}/export`, {\n    method: 'POST'\n  }),\n  downloadWeek: week => {\n    const url = `${API_BASE_URL}/api/v1/weeks/${week}/export/download`;\n    window.open(url, '_blank');\n  },\n  // Week spec operations\n  getWeekSpec: (week, part) => fetchAPI(`/api/v1/weeks/${week}/spec/parts/${part}`),\n  getCompiledWeekSpec: week => fetchAPI(`/api/v1/weeks/${week}/spec/compiled`),\n  // Day field operations\n  getDayField: (week, day, field) => fetchAPI(`/api/v1/weeks/${week}/days/${day}/fields/${field}`),\n  updateDayField: (week, day, field, content) => fetchAPI(`/api/v1/weeks/${week}/days/${day}/fields/${field}`, {\n    method: 'PUT',\n    body: JSON.stringify({\n      content\n    })\n  }),\n  getDayFlintBundle: (week, day) => fetchAPI(`/api/v1/weeks/${week}/days/${day}/flint-bundle`),\n  // Generation endpoints\n  generateWeekSpec: week => fetchAPI(`/api/v1/gen/weeks/${week}/spec`, {\n    method: 'POST'\n  }),\n  generateRoleContext: week => fetchAPI(`/api/v1/gen/weeks/${week}/role-context`, {\n    method: 'POST'\n  }),\n  generateAssets: week => fetchAPI(`/api/v1/gen/weeks/${week}/assets`, {\n    method: 'POST'\n  }),\n  generateDayFields: (week, day) => fetchAPI(`/api/v1/gen/weeks/${week}/days/${day}/fields`, {\n    method: 'POST'\n  }),\n  generateDayDocument: (week, day) => fetchAPI(`/api/v1/gen/weeks/${week}/days/${day}/document`, {\n    method: 'POST'\n  }),\n  // Complete week hydration (main generation endpoint)\n  hydrateWeek: week => fetchAPI(`/api/v1/gen/weeks/${week}/hydrate`, {\n    method: 'POST'\n  })\n};\nexport { APIError };\nexport default api;","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","API_KEY","REACT_APP_API_KEY","APIError","Error","constructor","status","message","detail","name","fetchAPI","endpoint","options","headers","response","fetch","ok","errorData","json","catch","statusText","api","getUsage","resetUsage","method","scaffoldWeek","week","validateWeek","exportWeek","downloadWeek","url","window","open","getWeekSpec","part","getCompiledWeekSpec","getDayField","day","field","updateDayField","content","body","JSON","stringify","getDayFlintBundle","generateWeekSpec","generateRoleContext","generateAssets","generateDayFields","generateDayDocument","hydrateWeek"],"sources":["/Users/elle_jansick/steel/frontend/src/api/client.ts"],"sourcesContent":["// API Client for STEEL Backend\nimport type { UsageStats, ValidationResult, ExportResponse, WeekHydrationResult } from '../types'\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000'\nconst API_KEY = process.env.REACT_APP_API_KEY || ''\n\nclass APIError extends Error {\n  constructor(public status: number, message: string, public detail?: any) {\n    super(message)\n    this.name = 'APIError'\n  }\n}\n\nasync function fetchAPI<T>(\n  endpoint: string,\n  options: RequestInit = {}\n): Promise<T> {\n  const headers: HeadersInit = {\n    'Content-Type': 'application/json',\n    ...(API_KEY ? { 'X-API-Key': API_KEY } : {}),\n    ...options.headers,\n  }\n\n  const response = await fetch(`${API_BASE_URL}${endpoint}`, {\n    ...options,\n    headers,\n  })\n\n  if (!response.ok) {\n    const errorData = await response.json().catch(() => ({}))\n    throw new APIError(\n      response.status,\n      errorData.detail || response.statusText,\n      errorData\n    )\n  }\n\n  return response.json()\n}\n\nexport const api = {\n  // Usage tracking\n  getUsage: () => fetchAPI<UsageStats>('/api/v1/usage'),\n\n  resetUsage: () => fetchAPI<{ message: string }>('/api/v1/usage/reset', {\n    method: 'POST',\n  }),\n\n  // Week operations\n  scaffoldWeek: (week: number) =>\n    fetchAPI<{ message: string; week_path: string }>(\n      `/api/v1/weeks/${week}/scaffold`,\n      { method: 'POST' }\n    ),\n\n  validateWeek: (week: number) =>\n    fetchAPI<ValidationResult>(`/api/v1/weeks/${week}/validate`, {\n      method: 'POST',\n    }),\n\n  exportWeek: (week: number) =>\n    fetchAPI<ExportResponse>(`/api/v1/weeks/${week}/export`, {\n      method: 'POST',\n    }),\n\n  downloadWeek: (week: number) => {\n    const url = `${API_BASE_URL}/api/v1/weeks/${week}/export/download`\n    window.open(url, '_blank')\n  },\n\n  // Week spec operations\n  getWeekSpec: (week: number, part: string) =>\n    fetchAPI<{ part: string; content: any }>(\n      `/api/v1/weeks/${week}/spec/parts/${part}`\n    ),\n\n  getCompiledWeekSpec: (week: number) =>\n    fetchAPI<{ week: number; spec: any }>(\n      `/api/v1/weeks/${week}/spec/compiled`\n    ),\n\n  // Day field operations\n  getDayField: (week: number, day: number, field: string) =>\n    fetchAPI<{ field: string; content: any }>(\n      `/api/v1/weeks/${week}/days/${day}/fields/${field}`\n    ),\n\n  updateDayField: (week: number, day: number, field: string, content: any) =>\n    fetchAPI<{ message: string }>(\n      `/api/v1/weeks/${week}/days/${day}/fields/${field}`,\n      {\n        method: 'PUT',\n        body: JSON.stringify({ content }),\n      }\n    ),\n\n  getDayFlintBundle: (week: number, day: number) =>\n    fetchAPI<{ week: number; day: number; fields: Record<string, any> }>(\n      `/api/v1/weeks/${week}/days/${day}/flint-bundle`\n    ),\n\n  // Generation endpoints\n  generateWeekSpec: (week: number) =>\n    fetchAPI<{ message: string; spec_path: string }>(\n      `/api/v1/gen/weeks/${week}/spec`,\n      { method: 'POST' }\n    ),\n\n  generateRoleContext: (week: number) =>\n    fetchAPI<{ message: string; context_path: string }>(\n      `/api/v1/gen/weeks/${week}/role-context`,\n      { method: 'POST' }\n    ),\n\n  generateAssets: (week: number) =>\n    fetchAPI<{ message: string; asset_paths: string[] }>(\n      `/api/v1/gen/weeks/${week}/assets`,\n      { method: 'POST' }\n    ),\n\n  generateDayFields: (week: number, day: number) =>\n    fetchAPI<{ message: string; field_paths: string[] }>(\n      `/api/v1/gen/weeks/${week}/days/${day}/fields`,\n      { method: 'POST' }\n    ),\n\n  generateDayDocument: (week: number, day: number) =>\n    fetchAPI<{ message: string; document_path: string }>(\n      `/api/v1/gen/weeks/${week}/days/${day}/document`,\n      { method: 'POST' }\n    ),\n\n  // Complete week hydration (main generation endpoint)\n  hydrateWeek: (week: number) =>\n    fetchAPI<WeekHydrationResult>(`/api/v1/gen/weeks/${week}/hydrate`, {\n      method: 'POST',\n    }),\n}\n\nexport { APIError }\nexport default api\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}