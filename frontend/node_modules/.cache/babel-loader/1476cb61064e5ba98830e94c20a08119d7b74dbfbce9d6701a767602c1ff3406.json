{"ast":null,"code":"var _s = $RefreshSig$();\n// React hooks for weeks data management\nimport { useState, useEffect, useCallback } from 'react';\nimport api from '../api/client';\nexport function useWeeks() {\n  _s();\n  const [weeks, setWeeks] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Generate mock weeks data based on curriculum structure\n  // In production, this would fetch from a GET /api/v1/weeks endpoint\n  const loadWeeks = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      // For now, generate weeks data from file system\n      // You can enhance this by adding a backend endpoint that lists all weeks\n      const virtues = ['Courage', 'Wisdom', 'Justice', 'Temperance', 'Faith', 'Hope', 'Charity'];\n      const generatedWeeks = [];\n      for (let i = 1; i <= 35; i++) {\n        // Check if week exists by attempting to get compiled spec\n        let status = 'pending';\n        let validated = false;\n        try {\n          await api.getCompiledWeekSpec(i);\n          status = 'completed';\n\n          // Try validation\n          const validation = await api.validateWeek(i);\n          validated = validation.is_valid;\n        } catch (err) {\n          // Week doesn't exist yet\n          status = 'pending';\n        }\n        generatedWeeks.push({\n          number: i,\n          virtue: virtues[(i - 1) % 7],\n          status,\n          lessonsCount: 4,\n          validated\n        });\n      }\n      setWeeks(generatedWeeks);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to load weeks');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  const validateWeek = useCallback(async weekNumber => {\n    try {\n      const result = await api.validateWeek(weekNumber);\n\n      // Update local state\n      setWeeks(prev => prev.map(w => w.number === weekNumber ? {\n        ...w,\n        validated: result.is_valid\n      } : w));\n      return result;\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Validation failed');\n      return null;\n    }\n  }, []);\n  const exportWeek = useCallback(async weekNumber => {\n    try {\n      const result = await api.exportWeek(weekNumber);\n      return result;\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Export failed');\n      throw err;\n    }\n  }, []);\n  useEffect(() => {\n    loadWeeks();\n  }, [loadWeeks]);\n  return {\n    weeks,\n    loading,\n    error,\n    reload: loadWeeks,\n    validateWeek,\n    exportWeek\n  };\n}\n_s(useWeeks, \"fWaLSnsmqhXNTCQoB6WFuxcnh10=\");","map":{"version":3,"names":["useState","useEffect","useCallback","api","useWeeks","_s","weeks","setWeeks","loading","setLoading","error","setError","loadWeeks","virtues","generatedWeeks","i","status","validated","getCompiledWeekSpec","validation","validateWeek","is_valid","err","push","number","virtue","lessonsCount","Error","message","weekNumber","result","prev","map","w","exportWeek","reload"],"sources":["/Users/elle_jansick/steel/frontend/src/hooks/useWeeks.ts"],"sourcesContent":["// React hooks for weeks data management\nimport { useState, useEffect, useCallback } from 'react'\nimport api from '../api/client'\nimport type { Week, ValidationResult } from '../types'\n\nexport function useWeeks() {\n  const [weeks, setWeeks] = useState<Week[]>([])\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n\n  // Generate mock weeks data based on curriculum structure\n  // In production, this would fetch from a GET /api/v1/weeks endpoint\n  const loadWeeks = useCallback(async () => {\n    setLoading(true)\n    setError(null)\n\n    try {\n      // For now, generate weeks data from file system\n      // You can enhance this by adding a backend endpoint that lists all weeks\n      const virtues = ['Courage', 'Wisdom', 'Justice', 'Temperance', 'Faith', 'Hope', 'Charity']\n      const generatedWeeks: Week[] = []\n\n      for (let i = 1; i <= 35; i++) {\n        // Check if week exists by attempting to get compiled spec\n        let status: Week['status'] = 'pending'\n        let validated = false\n\n        try {\n          await api.getCompiledWeekSpec(i)\n          status = 'completed'\n\n          // Try validation\n          const validation = await api.validateWeek(i)\n          validated = validation.is_valid\n        } catch (err) {\n          // Week doesn't exist yet\n          status = 'pending'\n        }\n\n        generatedWeeks.push({\n          number: i,\n          virtue: virtues[(i - 1) % 7],\n          status,\n          lessonsCount: 4,\n          validated,\n        })\n      }\n\n      setWeeks(generatedWeeks)\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to load weeks')\n    } finally {\n      setLoading(false)\n    }\n  }, [])\n\n  const validateWeek = useCallback(async (weekNumber: number): Promise<ValidationResult | null> => {\n    try {\n      const result = await api.validateWeek(weekNumber)\n\n      // Update local state\n      setWeeks(prev => prev.map(w =>\n        w.number === weekNumber\n          ? { ...w, validated: result.is_valid }\n          : w\n      ))\n\n      return result\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Validation failed')\n      return null\n    }\n  }, [])\n\n  const exportWeek = useCallback(async (weekNumber: number) => {\n    try {\n      const result = await api.exportWeek(weekNumber)\n      return result\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Export failed')\n      throw err\n    }\n  }, [])\n\n  useEffect(() => {\n    loadWeeks()\n  }, [loadWeeks])\n\n  return {\n    weeks,\n    loading,\n    error,\n    reload: loadWeeks,\n    validateWeek,\n    exportWeek,\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}