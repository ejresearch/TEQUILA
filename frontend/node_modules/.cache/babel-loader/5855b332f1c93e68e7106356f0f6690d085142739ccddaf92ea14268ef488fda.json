{"ast":null,"code":"var _s = $RefreshSig$();\n// React hooks for weeks data management\nimport { useState, useEffect, useCallback } from 'react';\nimport api from '../api/client';\nexport function useWeeks() {\n  _s();\n  const [weeks, setWeeks] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Generate weeks data - lightweight initial load\n  const loadWeeks = useCallback(async () => {\n    console.log('Loading weeks...');\n    setLoading(true);\n    setError(null);\n    const virtues = ['Courage', 'Wisdom', 'Justice', 'Temperance', 'Faith', 'Hope', 'Charity'];\n    const generatedWeeks = [];\n    try {\n      // Quick health check - just try to get Week 1\n      console.log('Checking backend connection...');\n      await api.getCompiledWeekSpec(1);\n      console.log('Backend connected! Week 1 exists.');\n\n      // Week 1 exists, so check a few more\n      const existingWeeks = new Set([1]);\n\n      // Check weeks 2-12 in parallel (much faster)\n      const checkPromises = [];\n      for (let i = 2; i <= 12; i++) {\n        checkPromises.push(api.getCompiledWeekSpec(i).then(() => existingWeeks.add(i)).catch(() => {}) // Ignore errors for non-existent weeks\n        );\n      }\n      await Promise.all(checkPromises);\n      console.log(`Found ${existingWeeks.size} existing weeks`);\n\n      // Generate all 35 weeks\n      for (let i = 1; i <= 35; i++) {\n        generatedWeeks.push({\n          number: i,\n          virtue: virtues[(i - 1) % 7],\n          status: existingWeeks.has(i) ? 'completed' : 'pending',\n          lessonsCount: 4,\n          validated: existingWeeks.has(i) // Assume completed = validated for now\n        });\n      }\n      setWeeks(generatedWeeks);\n      console.log('Weeks loaded successfully');\n    } catch (err) {\n      // Backend not running or Week 1 doesn't exist - show all pending\n      console.warn('Backend not available or no weeks generated yet:', err);\n      for (let i = 1; i <= 35; i++) {\n        generatedWeeks.push({\n          number: i,\n          virtue: virtues[(i - 1) % 7],\n          status: 'pending',\n          lessonsCount: 4,\n          validated: false\n        });\n      }\n      setWeeks(generatedWeeks);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  const validateWeek = useCallback(async weekNumber => {\n    try {\n      const result = await api.validateWeek(weekNumber);\n\n      // Update local state\n      setWeeks(prev => prev.map(w => w.number === weekNumber ? {\n        ...w,\n        validated: result.is_valid\n      } : w));\n      return result;\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Validation failed');\n      return null;\n    }\n  }, []);\n  const exportWeek = useCallback(async weekNumber => {\n    try {\n      const result = await api.exportWeek(weekNumber);\n      return result;\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Export failed');\n      throw err;\n    }\n  }, []);\n  useEffect(() => {\n    loadWeeks();\n  }, [loadWeeks]);\n  return {\n    weeks,\n    loading,\n    error,\n    reload: loadWeeks,\n    validateWeek,\n    exportWeek\n  };\n}\n_s(useWeeks, \"fWaLSnsmqhXNTCQoB6WFuxcnh10=\");","map":{"version":3,"names":["useState","useEffect","useCallback","api","useWeeks","_s","weeks","setWeeks","loading","setLoading","error","setError","loadWeeks","console","log","virtues","generatedWeeks","getCompiledWeekSpec","existingWeeks","Set","checkPromises","i","push","then","add","catch","Promise","all","size","number","virtue","status","has","lessonsCount","validated","err","warn","validateWeek","weekNumber","result","prev","map","w","is_valid","Error","message","exportWeek","reload"],"sources":["/Users/elle_jansick/steel/frontend/src/hooks/useWeeks.ts"],"sourcesContent":["// React hooks for weeks data management\nimport { useState, useEffect, useCallback } from 'react'\nimport api from '../api/client'\nimport type { Week, ValidationResult } from '../types'\n\nexport function useWeeks() {\n  const [weeks, setWeeks] = useState<Week[]>([])\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n\n  // Generate weeks data - lightweight initial load\n  const loadWeeks = useCallback(async () => {\n    console.log('Loading weeks...')\n    setLoading(true)\n    setError(null)\n\n    const virtues = ['Courage', 'Wisdom', 'Justice', 'Temperance', 'Faith', 'Hope', 'Charity']\n    const generatedWeeks: Week[] = []\n\n    try {\n      // Quick health check - just try to get Week 1\n      console.log('Checking backend connection...')\n      await api.getCompiledWeekSpec(1)\n      console.log('Backend connected! Week 1 exists.')\n\n      // Week 1 exists, so check a few more\n      const existingWeeks = new Set<number>([1])\n\n      // Check weeks 2-12 in parallel (much faster)\n      const checkPromises = []\n      for (let i = 2; i <= 12; i++) {\n        checkPromises.push(\n          api.getCompiledWeekSpec(i)\n            .then(() => existingWeeks.add(i))\n            .catch(() => {}) // Ignore errors for non-existent weeks\n        )\n      }\n      await Promise.all(checkPromises)\n\n      console.log(`Found ${existingWeeks.size} existing weeks`)\n\n      // Generate all 35 weeks\n      for (let i = 1; i <= 35; i++) {\n        generatedWeeks.push({\n          number: i,\n          virtue: virtues[(i - 1) % 7],\n          status: existingWeeks.has(i) ? 'completed' : 'pending',\n          lessonsCount: 4,\n          validated: existingWeeks.has(i), // Assume completed = validated for now\n        })\n      }\n\n      setWeeks(generatedWeeks)\n      console.log('Weeks loaded successfully')\n    } catch (err) {\n      // Backend not running or Week 1 doesn't exist - show all pending\n      console.warn('Backend not available or no weeks generated yet:', err)\n\n      for (let i = 1; i <= 35; i++) {\n        generatedWeeks.push({\n          number: i,\n          virtue: virtues[(i - 1) % 7],\n          status: 'pending',\n          lessonsCount: 4,\n          validated: false,\n        })\n      }\n      setWeeks(generatedWeeks)\n    } finally {\n      setLoading(false)\n    }\n  }, [])\n\n  const validateWeek = useCallback(async (weekNumber: number): Promise<ValidationResult | null> => {\n    try {\n      const result = await api.validateWeek(weekNumber)\n\n      // Update local state\n      setWeeks(prev => prev.map(w =>\n        w.number === weekNumber\n          ? { ...w, validated: result.is_valid }\n          : w\n      ))\n\n      return result\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Validation failed')\n      return null\n    }\n  }, [])\n\n  const exportWeek = useCallback(async (weekNumber: number) => {\n    try {\n      const result = await api.exportWeek(weekNumber)\n      return result\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Export failed')\n      throw err\n    }\n  }, [])\n\n  useEffect(() => {\n    loadWeeks()\n  }, [loadWeeks])\n\n  return {\n    weeks,\n    loading,\n    error,\n    reload: loadWeeks,\n    validateWeek,\n    exportWeek,\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}